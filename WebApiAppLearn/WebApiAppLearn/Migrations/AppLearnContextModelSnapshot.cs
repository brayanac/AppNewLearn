// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiAppLearn.DataContext;

namespace WebApiAppLearn.Migrations
{
    [DbContext(typeof(AppLearnContext))]
    partial class AppLearnContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebApiAppLearn.Models.Course", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("institute_Id")
                        .HasColumnType("int");

                    b.Property<string>("schedule")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("teacher_Id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("institute_Id");

                    b.HasIndex("teacher_Id");

                    b.ToTable("course");
                });

            modelBuilder.Entity("WebApiAppLearn.Models.Institute", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("id");

                    b.ToTable("institute");
                });

            modelBuilder.Entity("WebApiAppLearn.Models.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("id");

                    b.ToTable("role");
                });

            modelBuilder.Entity("WebApiAppLearn.Models.Teacher", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("id");

                    b.ToTable("teacher");
                });

            modelBuilder.Entity("WebApiAppLearn.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("institute_Id")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("role_Id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("institute_Id");

                    b.HasIndex("role_Id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("WebApiAppLearn.Models.Course", b =>
                {
                    b.HasOne("WebApiAppLearn.Models.Institute", "Institute")
                        .WithMany("Courses")
                        .HasForeignKey("institute_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApiAppLearn.Models.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("teacher_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApiAppLearn.Models.User", b =>
                {
                    b.HasOne("WebApiAppLearn.Models.Institute", "Institute")
                        .WithMany("Users")
                        .HasForeignKey("institute_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApiAppLearn.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("role_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
